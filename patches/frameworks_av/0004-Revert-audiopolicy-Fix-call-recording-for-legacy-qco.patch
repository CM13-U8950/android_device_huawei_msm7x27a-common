From c449c4fd0cd3ece04b51f82b90a7ecaf65e0e5ab Mon Sep 17 00:00:00 2001
From: Kyle Harrison <khwebmail@gmail.com>
Date: Thu, 9 Apr 2015 19:50:00 +0100
Subject: [PATCH] Revert "audiopolicy: Fix call recording for legacy qcom HAL"

This reverts commit 7e1c0f2bb721f12b067fd88dbe53618e22d6c0a9.
---
 services/audiopolicy/AudioPolicyManager.cpp | 24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/services/audiopolicy/AudioPolicyManager.cpp b/services/audiopolicy/AudioPolicyManager.cpp
index d1643f2..4775d29 100644
--- a/services/audiopolicy/AudioPolicyManager.cpp
+++ b/services/audiopolicy/AudioPolicyManager.cpp
@@ -276,11 +276,6 @@ const StringToEnum sInChannelsNameToEnumTable[] = {
 #ifdef AUDIO_EXTN_SSR_ENABLED
     STRING_TO_ENUM(AUDIO_CHANNEL_IN_5POINT1),
 #endif
-#ifdef QCOM_DIRECTTRACK
-    STRING_TO_ENUM(AUDIO_CHANNEL_IN_VOICE_CALL_MONO),
-    STRING_TO_ENUM(AUDIO_CHANNEL_IN_VOICE_DNLINK_MONO),
-    STRING_TO_ENUM(AUDIO_CHANNEL_IN_VOICE_UPLINK_MONO),
-#endif
 };
 
 const StringToEnum sGainModeNameToEnumTable[] = {
@@ -2279,22 +2274,27 @@ status_t AudioPolicyManager::getInputForAttr(const audio_attributes_t *attr,
         } else {
             *inputType = API_INPUT_LEGACY;
         }
-#ifdef QCOM_DIRECTTRACK
+        /*The below code is intentionally not ported.
+        It's not needed to update the channel mask based on source because
+        the source is sent to audio HAL through set_parameters().
+        for example, if source = VOICE_CALL, does not mean we need to capture two channels.
+        If the sound recorder app selects AMR as encoding format but source as RX+TX,
+        we need both in ONE channel. So we use the channels set by the app and use source
+        to tell the driver what needs to captured (RX only, TX only, or RX+TX ).*/
         // adapt channel selection to input source
-        switch (inputSource) {
+        /*switch (inputSource) {
         case AUDIO_SOURCE_VOICE_UPLINK:
-            channelMask |= AUDIO_CHANNEL_IN_VOICE_UPLINK;
+            channelMask = AUDIO_CHANNEL_IN_VOICE_UPLINK;
             break;
         case AUDIO_SOURCE_VOICE_DOWNLINK:
-            channelMask |= AUDIO_CHANNEL_IN_VOICE_DNLINK;
+            channelMask = AUDIO_CHANNEL_IN_VOICE_DNLINK;
             break;
         case AUDIO_SOURCE_VOICE_CALL:
-            channelMask |= AUDIO_CHANNEL_IN_VOICE_UPLINK | AUDIO_CHANNEL_IN_VOICE_DNLINK;
+            channelMask = AUDIO_CHANNEL_IN_VOICE_UPLINK | AUDIO_CHANNEL_IN_VOICE_DNLINK;
             break;
         default:
             break;
-        }
-#endif
+        }*/
         if (inputSource == AUDIO_SOURCE_HOTWORD) {
             ssize_t index = mSoundTriggerSessions.indexOfKey(session);
             if (index >= 0) {
-- 
2.3.5

